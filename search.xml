<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[关于数组去重]]></title>
      <url>https://imjohnny.github.io/2016/05/26/%E5%85%B3%E4%BA%8E%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</url>
      <content type="html"><![CDATA[<p><img src="/uploads/array_unique.jpg" alt=""><br>数组去重想必大家在工作当中都碰到过，今天总结一下我的一些方法。<br><a id="more"></a></p>
<h2 id="1-判断函数"><a href="#1-判断函数" class="headerlink" title="1.判断函数"></a>1.判断函数</h2><p>定义一个findInArr的判断函数，如果有相同的就返回true,不相同就返回false<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findInArr</span>(<span class="params">arr,n</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i]==n)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>然后通过循环遍历<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr2=[];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">	<span class="keyword">if</span>(!findInArr(arr2,arr[i]))&#123;</span><br><span class="line">		arr2.push(arr[i])</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-删除自身重复的项"><a href="#2-删除自身重复的项" class="headerlink" title="2.删除自身重复的项"></a>2.删除自身重复的项</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;<span class="keyword">this</span>.length;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">this</span>[i]==<span class="keyword">this</span>[j])&#123;</span><br><span class="line">				<span class="keyword">this</span>.splice(j--,<span class="number">1</span>);	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="3-使用indexOf方法"><a href="#3-使用indexOf方法" class="headerlink" title="3.使用indexOf方法"></a>3.使用indexOf方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> n=[];<span class="comment">//新的临时数组</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(n.indexOf(<span class="keyword">this</span>[i])==<span class="number">-1</span>)&#123;</span><br><span class="line">			n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> n;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//兼容IE6-8</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.indexOf=<span class="built_in">Array</span>.prototype.indexOf||<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>[i]==data)&#123;</span><br><span class="line">			<span class="keyword">return</span> i;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>另外一种方法也是使用indexOf方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> n=[<span class="keyword">this</span>[<span class="number">0</span>]];<span class="comment">//新的临时数组</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//从目标数组第2个开始遍历</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>.indexOf(<span class="keyword">this</span>[i])==i)&#123;</span><br><span class="line">			<span class="comment">//indexOf只返回数组中第一个相同项的索引</span></span><br><span class="line">			n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> n;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-利用json的映射关系去重"><a href="#4-利用json的映射关系去重" class="headerlink" title="4.利用json的映射关系去重"></a>4.利用json的映射关系去重</h2><p>要注意数组里面相同内容，但是数据类型不一致的情况，比如11和’11’。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> n = &#123;&#125;,r=[]; <span class="comment">//n为json，r为临时数组</span></span><br><span class="line">	<span class="keyword">var</span> type=<span class="string">''</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) <span class="comment">//遍历当前数组</span></span><br><span class="line">	&#123;</span><br><span class="line">		type=<span class="keyword">typeof</span>(<span class="keyword">this</span>[i]);</span><br><span class="line">		<span class="keyword">if</span> (!n[<span class="keyword">this</span>[i]+type]) <span class="comment">//如果json中没有当前项</span></span><br><span class="line">		&#123;</span><br><span class="line">			n[<span class="keyword">this</span>[i]+type] = <span class="literal">true</span>; <span class="comment">//存入json</span></span><br><span class="line">			r.push(<span class="keyword">this</span>[i]); <span class="comment">//把当前数组的当前项push到临时数组里面</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Javascript学习笔记-Day2]]></title>
      <url>https://imjohnny.github.io/2016/05/26/Javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Day2/</url>
      <content type="html"><![CDATA[<p><img src="/uploads/learnDay2.jpg" alt=""><br>Day2<br>今天我们来讨论一下js里面的基本数据类型，变量还有函数。</p>
<h2 id="1-JS里面的基本数据类型"><a href="#1-JS里面的基本数据类型" class="headerlink" title="1.JS里面的基本数据类型"></a>1.JS里面的基本数据类型</h2><ul>
<li>字符串String，被引号包着的就是字符。</li>
<li>数字Number，能够参与数学运算。</li>
<li>布尔Boolean，true or false</li>
</ul>
<h2 id="2-变量出现的地方，就和值（内容本身）出现是一样的。"><a href="#2-变量出现的地方，就和值（内容本身）出现是一样的。" class="headerlink" title="2.变量出现的地方，就和值（内容本身）出现是一样的。"></a>2.变量出现的地方，就和值（内容本身）出现是一样的。</h2><p><strong>变量和字符的区别：加了引号就是字符，不加就是变量。</strong><br>变量需要先定义再使用，变量的值，以使用时为准。<br><a id="more"></a></p>
<h2 id="3-函数的定义："><a href="#3-函数的定义：" class="headerlink" title="3.函数的定义："></a>3.函数的定义：</h2><p>包了一段代码，需要的时候拿来直接用。<br><strong>函数在哪里定义并不重要，重要的是在哪里调用</strong></p>
<h2 id="4-函数的传参："><a href="#4-函数的传参：" class="headerlink" title="4.函数的传参："></a>4.函数的传参：</h2><p>为什么函数需要传参？函数里面有确定不下来的东西时，就需要提供参数。<br>如何传参？<br>调用的时候：函数名（要传的参数）<br>定义的时候：function 函数名（参数）<br>参数可以传递多个，参数之间用逗号隔开</p>
<h2 id="5-获取属性"><a href="#5-获取属性" class="headerlink" title="5.获取属性"></a>5.获取属性</h2><p>oElement.value/oElement.title   方法1<br>oElement[value]/oElement[title] 方法2<br>当属性不确定时，使用方法2获取属性值。</p>
<h2 id="6-if判断"><a href="#6-if判断" class="headerlink" title="6.if判断"></a>6.if判断</h2><p>if(条件){代码}                                     1种情况的判断<br>if(条件){代码1}else{代码2}                         2种情况的判断<br>if(条件1){代码1}else if(条件2){代码2}else{代码3}      3种情况的判断<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件<span class="number">1</span>）&#123;<span class="comment">//多种情况</span></span><br><span class="line">    代码<span class="number">1</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(条件<span class="number">2</span>)&#123;        </span><br><span class="line">    代码<span class="number">2</span></span><br><span class="line">...<span class="comment">//else if(条件n)&#123;&#125;--&gt;无限复制</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    代码n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>else if /else     不是必须的，但是if必不可少</p>
<h2 id="7-匿名函数："><a href="#7-匿名函数：" class="headerlink" title="7.匿名函数："></a>7.匿名函数：</h2><p>function(){代码};<br>匿名函数就是没有名字的函数。<br><strong>但凡函数名出现的地方，就等于函数本身出现</strong><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var show = function()&#123;alert('abc)&#125;;</span><br><span class="line">show();//abc</span><br></pre></td></tr></table></figure></p>
<h2 id="8-window-onload"><a href="#8-window-onload" class="headerlink" title="8.window.onload"></a>8.window.onload</h2><p>当窗口内容全部加载完毕时，执行代码。（包括图片等全部加载完毕）<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	代码</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="9-获取一组元素"><a href="#9-获取一组元素" class="headerlink" title="9.获取一组元素"></a>9.获取一组元素</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取一组div元素</span></span><br><span class="line"><span class="keyword">var</span> aDiv=<span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>)；</span><br></pre></td></tr></table></figure>
<p>这个获取的集合是一个伪数组<br>下标 就是代表是第几个元素 aDiv[下标] eg. aDiv[0]代表第一个元素<br>长度 有多少个元素 length<br>在原生的javascript中一组元素没有办法一起操作。</p>
<h2 id="10-遍历（循环）"><a href="#10-遍历（循环）" class="headerlink" title="10.遍历（循环）"></a>10.遍历（循环）</h2><p>循环：重复执行一段代码。<br>循环的步骤：</p>
<ol>
<li>初始值</li>
<li>条件</li>
<li>执行语句</li>
<li>自增<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//while循环</span></span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">while</span>(<span class="comment">//条件)&#123;</span></span><br><span class="line">    <span class="comment">//语句</span></span><br><span class="line">    i++;<span class="comment">//自增</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="keyword">for</span>(初始化;条件;自增)&#123;</span><br><span class="line">    <span class="comment">//语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="11-取反"><a href="#11-取反" class="headerlink" title="11.!取反"></a>11.!取反</h2><p>原来的状态取相反值<br>！内容</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Javascript学习笔记 Day1]]></title>
      <url>https://imjohnny.github.io/2016/05/25/Javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Day1/</url>
      <content type="html"><![CDATA[<p><img src="/uploads/learn.jpg" alt=""></p>
<h2 id="前端三架马车之Javascript"><a href="#前端三架马车之Javascript" class="headerlink" title="前端三架马车之Javascript"></a>前端三架马车之Javascript</h2><p>一直以来学习JS总是断断续续，用到了啃一块，没有一个系统的学习过程。今年3月份的时候，打算完整的学习一下，给自己充一下电。所以就有了下面的一系列的学习笔记。<br><a id="more"></a></p>
<h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><p>1、浏览器里面的javascript是干什么的？</p>
<p>通俗点说其实就是实现浏览器的一些功能，最主要的就是修改样式，而且修改的还是行间样式。</p>
<p>2、再来说说一直说的事件，简单点就是用户的操作，像鼠标的点击、滑入、滑出等等。<br>onclick/onmouseover/onmouseout/onmousemove/…</p>
<p>3、alert也是很有用的一个函数，暂停后续代码的执行，等待用户的确认，用于代码调试。</p>
<p>4、js常用的自然就是抓取对象了<br>document指的文档，也就是整个页面，document.getElementById(‘id属性名’);<br>eg：document.getElementById(‘div1′).style.display=’none’;</p>
<p>5、关于单引号还是双引号的问题<br>一般我是在html结构里面使用双引号，js里面使用单引号，当然双引号和单引号都是可以通用的，只要不是一单一双使用就可以喽，<br>另外注意单双内外错开使用。</p>
<p>6、对于JS来说，任何元素都可以添加事件，任何CSS属性都可以修改。<br>html属性名=值<br>就算是link标签也可以给id属性</p>
<p>7、什么是函数？</p>
<ul>
<li>函数就是包了一堆代码的代码块</li>
<li>函数申明的基本写法： function 函数名(){JS代码}</li>
<li>函数名()就是调用，函数名注意不要重名会引起冲突，定义了函数以后，不调用，函数里面的代码就不会执行。</li>
<li>函数如果没有定义，但是调用了就会报错…not defined</li>
<li>函数可以一次定义，多次调用，非常方便。</li>
</ul>
<p>8、什么是变量？<br>变量就是一个别名，用来存放数据的。<br>var 变量名=值<br>变量使用非常的方便，可以减少代码的体积并且便于修改。</p>
<p>9、关于错误<br>xxx of null 对象抓取失败<br>xxx not defined 没定义(变量没有，搞了一个a变量，用的b)</p>
<p>10、关于class和style<br>元素.className=值<br>style获取和修改的都是行间样式<br>元素.style.属性名=值; 修改 | 元素.style.属性名; 获取<br>对于同一个元素，不要同时使用class和style，尽量可以使用class。JS直接添加删除就可以完成效果了。</p>
<p>11、CSS优先级 浏览器默认&lt;标签属性&lt;*&lt;tagname&lt;class&lt;id&lt;style&lt;important</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[为什么你要写博客]]></title>
      <url>https://imjohnny.github.io/2016/05/25/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E8%A6%81%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p><img src="/uploads/write.jpg" alt=""></p>
<p>我所指的写博客，不单只是写一篇文章出来这一结果。而应该是写的这一过程，写过技术文章的朋友应该跟我一样有这么一个过程。<br><a id="more"></a></p>
<p>　　1 自己了解学习，文章所涉及到的知识点，及知识点衍生出来的知识点。</p>
<p>　　2 对学习的知识点进行验证，以确保理论值与实践值保持一致</p>
<p>　　3 构思文章的大纲，哪些部分需要重点写，需要配合实例代码，图片等信息</p>
<p>　　4 动手写，写完后再次检查校正并排版，然后发表</p>
<p>　　5 针对网友的评论中提出的问题进行回复</p>
<p>好的博主写文章一般都会经历以上5上步，最终以上5步融合成一个结果那就是”一篇文章” 这一过程也是我心中对的”写博客”一词的诠释 </p>
<h2 id="为什么你要写博客？"><a href="#为什么你要写博客？" class="headerlink" title="为什么你要写博客？"></a>为什么你要写博客？</h2><p>写博客是为了写给自己看。我认为写博客对自己的提高是很大的，刚开始的时候你可能写不出来多少东西，但是只要你坚持写效果就会很明显。</p>
<p>写博文之前，肯定会将要写的博文之中涉及的知识点了解清楚，知识一般都是有联系的，人的记忆是存在记忆曲线的需要不断的重复记忆才能长久的记住某一事物，而每写一篇文章时都会查阅资料，在这一过程中必然会遇到以前记住了而现在渐渐淡忘的知识点，当你再次看到时瞬间就会回想起，此时以前的知识点就得到了强化。</p>
<p>写博文的同时也会锻炼自己的写作水平和提升自己的学习能力。为了博文的准确性，肯定会在网上找资料，在网上找资料找的多了，也就掌握了方法，先百度再bing或者google来找资料，还有很多博客的文章看了以后也是受益良多，特别是某些具体的问题，很多博文直接就有解决方案。</p>
<p>写博文有时候也是一种技术的积累和沉淀，也可能会对别人有所帮助。你在项目里面遇到的难题，花费了大量的时间去解决，然后总结归纳出了解决方案，写在博文里面，以后自己再碰到同样的问题，直接就能一步步的解决了。别人碰到了同样的问题正好搜索到你的博文，就能帮助到别人，何乐而不为呢。</p>
<p>很多技术牛人都有自己的博客，不仅记录了自己的成长，也对很多人的学习提供了帮助。</p>
<h2 id="推荐以下博客："><a href="#推荐以下博客：" class="headerlink" title="推荐以下博客："></a>推荐以下博客：</h2><p><strong><a href="http://www.w3cplus.com/" target="_blank" rel="external">http://www.w3cplus.com/</a> 大漠的博客 大漠在css方面功力深厚，现在在淘宝就职。</strong><br><strong><a href="http://www.zhangxinxu.com/" target="_blank" rel="external">http://www.zhangxinxu.com/</a> 张鑫旭的博客 博文风格幽默，深入浅出，非常有特色 是腾讯的前端工程师</strong><br><strong><a href="http://www.liaoxuefeng.com/" target="_blank" rel="external">http://www.liaoxuefeng.com/</a> 廖雪峰的官方网站 里面的git和js教程都是不错的</strong><br><strong><a href="http://www.nowamagic.net/" target="_blank" rel="external">http://www.nowamagic.net/</a> 简明现代魔法</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://imjohnny.github.io/2016/05/04/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
